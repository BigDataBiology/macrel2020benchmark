from six import StringIO
from matplotlib import pyplot as plt
import seaborn as sns
import pandas as pd
import numpy as np

data = pd.read_excel('Benchmark_figure4_datasource.xlsx')
data.rename(columns={'Detph (M)': 'Depth (m)'}, inplace=True)
data = pd.pivot_table(data,
        index=['Metagenome'], columns=['Depth (m)'])

smorfs = data['smORFs']
n_amps = data['Predicted AMPs']
found_ref = data['% Found']
spurious_per = data['% spurious']
time_in_h = data['Time in hours']

data = '''
1	12.4729	0.142229	18.7093	0.213344	24.9458	0.284459
2	0.818383	0.071195	5.14352	0.106793	6.85803	0.14239
3	5.65041	0.260312	1.22757	0.390468	1.63677	0.520624
4	4.62728	2.40347	8.47561	3.60521	11.3008	4.80695
5	11.5157	1.25145	6.94093	1.87718	9.25457	2.50291
6	42.1963	0.72674	17.2735	1.09011	23.0314	1.45348
7	152.441	0.327676	63.2945	0.491514	84.3927	0.655352
8	15.119	0.253176	228.662	0.379764	304.882	0.506352
9	6.51703	0.370886	22.6785	0.556329	30.238	0.741773
10	20.1491	0.320031	9.77555	0.480046	13.0341	0.640061
11	7.84583	0.313543	30.2237	0.470314	40.2982	0.627085
12	152.441	0.286402	11.7687	0.429603	15.6917	0.572804
13	11.3958	0.623916	228.661	0.935874	304.881	1.24783
14	73.8762	0.315114	17.0938	0.472671	22.7917	0.630228
15	4.62728	0.105479	110.814	0.158218	147.752	0.210958
16	168.247	0.305046	6.94092	0.457569	9.25456	0.610091
17	11.262	0.382588	252.37	0.573882	336.494	0.765176
18	8.02392	1.57072	16.893	2.35609	22.524	3.14145
19	336.553	3.42901	12.0359	0.392909	16.0478	0.523878
20	81.4583	0.261939	504.83	0.226134	2.57486	0.301513
21	55.8035	0.150756	1.59418	1.30025	673.107	1.73366
22	32.6192	0.866831	122.187	0.827586	162.917	1.10345
23	32.863	0.551724	48.9288	1.76344	65.2384	2.35126
24	6.54417	1.17563	3.69215	1.59418	65.726	2.12557
25	5.97256	1.06279	49.2945	1.93177	7.33826	2.57569
26	49.5449	1.28784	5.5037	0.513887	13.0883	0.685183
27	8.38419	0.342592	9.81626	0.347326	11.9451	0.463101
28	7.82835	0.231551	8.95884	0.347324	14.7383	0.463099
29	15.8966	0.231549	74.3173	0.33439	99.0898	0.445854
30	101.288	0.222927	12.5763	2.06779	16.7684	2.75705
31	4.88425	1.37853	11.7425	0.877377	31.7932	1.16984
32	19.1298	0.584918	23.8449	0.877379	202.576	1.16984
33	12.3162	0.58492	151.932	0.33087	9.7685	0.44116
34	9.53943	0.22058	7.32637	0.625393	38.2595	0.833857
35	16.009	0.416928	28.6946	0.887513	24.6324	1.18335
36	9.42469	0.591675	18.4743	2.56253	19.0789	3.41671
37	9.25079	1.70835	14.3091	0.158218	32.018	0.210957
38	20.8113	0.105479	24.0135	0.503319	18.8494	0.671092
39	61.5541	0.335546	14.137	0.600398	18.5016	0.80053
40	13.9543	0.400265	13.8762	2.88554	41.6227	3.84739
41	19.8171	1.9237	31.217	0.935874	123.108	1.24783
42	22.6979	0.623916	92.3312	0.863686	39.6341	1.15158
43	9.60403	0.575791	20.9314	1.09281	45.3958	1.45708
44	25.4567	0.728538	29.7256	0.505402	11.0772	0.67387
45	24.8421	0.336935	34.0468	0.509717	19.2081	0.679623
46	21.0529	0.339812	8.30794	1.93114	50.9134	1.85067
47	18.9905	1.28743	14.406	1.388	49.6842	1.11513
48	61.5542	0.925336	38.185	0.836345	42.1058	2.12558
49	6.98989	0.557563	37.2631	0.295738	37.981	0.394318
50	3.72721	1.06279	31.5793	1.10613	5.36763	1.47485
51	33.4916	0.197159	28.4857	30.2236	123.108	40.2981
52	13.4781	0.737423	92.3313	0.951852	13.9798	1.26914
53	19.9379	20.149	10.4848	83.7052	7.45442	111.607
54	20.8591	0.634568	5.59081	0.836347	66.9832	4.92287
55	13.0087	2.46144	50.2374	0.533475	26.9563	1.11513
56	180.847	0.557564	20.2172	1.45647	39.8758	0.7113
57	27.291	0.35565	29.9069	1.46335	41.7183	1.94196
58	3.81956	0.970979	31.2887	0.737954	26.0174	1.95113
59	11.6056	0.975565	19.5131	0.503318	361.695	0.983939
60	8.4355	3.66913	271.271	2.66066	54.5821	0.671091
61	39.7947	0.491969	40.9366	0.292301	7.63911	3.54755
62	38.4588	0.335546	5.72934	0.938098	27.9086	0.389735
63	60.7364	1.77377	17.4084	0.771747	23.2112	1.2508
64	5.49924	0.194868	12.6533	1.5333	16.871	1.029
65	12.7184	0.625399	59.692	11.0537	79.5894	2.0444
66	11.5286	0.514498	57.6882	0.213344	5.36768	0.284458
67	17.5878	1.0222	91.1045	0.106792	76.9177	0.14239
68	7.79968	7.36914	8.24887	0.684002	6.91766	0.912003
69	26.5903	0.142229	19.0776	0.533477	121.473	0.711303
70	25.1143	0.071195	17.2929	0.501692	10.9985	0.668923
71	6.54955	0.456001	26.3818	1.82491	25.4367	2.43321
72	9.96551	0.355651	11.6995	3.45609	23.0572	4.60812
73	9.81735	0.334461	3.20518	5.54265	11.9901	15.6567
74	18.5735	1.21661	3.52658	2.02881	35.1757	7.3902
75	8.55405	2.30406	39.8854	0.542665	15.5994	2.70508
76	42.4114	3.6951	37.6714	0.972795	4.27357	0.723554
77	9.0928	1.35254	9.82433	4.02956	4.70211	1.29706
78	13.0647	0.361777	14.9483	0.451938	53.1806	5.37275
79	4.37518	0.64853	14.726	7.05559	50.2286	0.602584
80	84.4714	2.68638	27.8603	0.705792	13.0991	9.40745
81	98.2126	0.301292	29.7994	1.27131	19.931	0.941057
82	12.2839	4.70373	12.8311	1.68113	19.6347	1.69508
83	15.2342	0.470528	63.6171	0.972792	37.1471	2.24151
84	18.5736	0.847538	13.6392	3.98832	39.7325	1.29706
85	8.65433	1.12076	19.5971	0.810873	17.1081	5.31776
86	4.46686	0.648528	6.56277	1.1635	84.8228	1.08116
87	159.376	2.65888	126.707	0.862808	18.1856	1.55134
88	57.717	0.540582	147.319	0.542668	26.1294	1.15041
89	165.341	0.775668	18.4258	5.60241	8.75036	0.723558
90	121.446	0.575205	22.8513	0.975655	168.943	7.46988
91	76.5177	0.361779	27.8605	1.32538	196.425	1.30087
92	33.2144	3.73494	5.07885	31.217	24.5677	1.76717
93	19.8662	0.650437	12.9815	1.07511	30.4684	41.6226
94	25.4799	0.883584	6.7003	0.867211	8.36424	1.43348
95	17.2796	20.8113	239.065	4.02572	37.1473	1.15628
96	9.86544	0.716738	3.52657	0.908829	6.7718	27.9086
97	86.3947	0.578141	86.5755	0.451937	17.3087	1.21177
98	26.9731	5.53862	248.012	2.67518	8.93373	0.602583
99	45.2288	2.68382	182.169	0.949812	318.753	3.56691
100	35.2367	0.605886	114.777	0.756778	4.70209	1.26642
101	7.09405	0.301291	49.8215	0.487827	115.434	1.00904
102	48.4414	1.78345	7.35035	1.64161	330.683	0.650437
103	22.6899	0.633208	38.2199	0.810874	242.892	2.18881
104	6.40285	0.504519	25.9193	0.130668	153.035	1.08117
105	1290.38	0.325218	22.8513	0.294081	66.4287	0.174224
106	6.93624	1.0944	7.29376	2.68485	9.80046	0.392108
107	120.681	0.540583	14.7982	38.1851	50.9599	3.5798
108	7.43045	0.0871122	129.592	0.572925	34.5591	50.9134
109	123.173	0.196054	40.4596	3.50902	9.72501	0.7639
110	52.6408	1.7899	67.8433	0.817051	3.01973	4.67869
111	8.92511	25.4567	52.855	20.9315	19.7309	1.0894
112	27.2772	0.38195	72.662	0.737165	172.789	0.982887
113	136.628	2.33935	34.0349	2.2164	53.9462	2.9552
114	10.6014	0.5447	7.86805	4.02576	7.77671	0.96361
115	47.9305	13.9543	9.60428	0.722707	90.4577	1.31245
116	15.1546	0.491443	1935.58	0.98434	70.4734	3.56691
117	10.1812	1.4776	3.33048	5.18824	14.1881	5.8961
118	17.0154	2.68384	10.4044	2.67518	96.8827	2.72263
119	449.962	0.481805	6.80346	4.42208	45.3798	2.55539
120	102.322	0.656227	181.022	2.04197	10.4907	1.24219
121	18.1107	3.45883	11.1457	1.91655	19.2389	1.9118
122	7.662	1.78346	184.76	0.931644	12.8057	7.63911
123	530.713	2.94805	25.1546	1.43385	13.7426	2.51305
124	9.39786	1.36132	78.9612	5.72934	4.92791	0.463623
125	223.381	1.2777	13.3877	1.88479	2580.77	0.739626
126	120.375	0.621096	58.6838	0.347718	4.44064	0.552871
127	15.9773	0.955902	40.9159	0.554719	13.8725	0.936783
128	75.3617	3.81956	204.943	0.414653	9.07128	7.40484
129	22.9673	1.25652	15.9021	0.702588	241.363	0.208895
130		0.231812	71.8958	5.55363	14.8609	0.0900861
131		0.369813	22.7319	0.156671	2.99413	0.855997
132		0.276435	8.17382	0.0675646	246.347	3.34478
133		0.468392	15.2718	0.641998	33.5394	0.17455
134		3.70242	25.5231	2.50859	105.282	0.415095
135		0.104447	674.942	0.130913	17.8502	1.84956
136		0.045043	6.90587	8.99257	78.2451	0.71759
137		0.427998	153.483	0.311321	54.5545	0.381389
138		1.67239	27.166	1.38717	273.257	2.15995
139		0.0872752	11.493	0.538193	21.2028	0.792252
140		5.99505	37.6755	0.286041	95.8611	0.211639
141		0.207547	796.07	1.61996	30.3093	0.764952
142		0.924782	14.0968	0.594189	10.8984	0.860939
143		0.358795	335.072	0.158729	4.90431	4.1891
144		0.190694	180.562	0.573714	20.3624	0.478548
145		1.07997	23.9659	0.645704	34.0309	0.860995
146		0.396126	7.35261	3.14182	899.923	0.160341
147		0.10582	9.36866	0.358911	9.20783	0.405051
148		0.382476	13.537	0.645746	204.644	0.327372
149		0.430469	113.043	0.120255	36.2213	0.506349
150		2.09455	4.04283	0.303788	15.324	1.02047
151		0.239274	34.4509	0.245529	4.78657	1.6758
152		0.430498		0.379762	5.54965	1.37618
153		0.0801703		0.76535	1061.43	0.336161
154		0.202525		1.25685	18.7957	35.7601
155		0.163686		1.03214	446.763	0.773225
156		0.253175		0.252121	9.46135	0.822444
157		0.510233		26.8201	240.75	0.658306
158		0.837902		0.579919	4.45541	0.524481
159		0.688091		0.616833	31.9546	0.334727
160		0.16808		0.493729	9.80347	0.260875
161		2.13679		0.393361	4.8198	0.110326
162		17.8801		0.251045	12.4915	0.217144
163		0.386613		0.195656	18.0493	0.217145
164		0.411222		0.0827444	150.723	0.389362
165		0.329153		0.162858	45.9346	0.110326
166		0.262241		0.162858		0.110326
167		0.167363		0.292021		0.99706
168		0.130437		0.0827444		0.792253
169		2.35105		0.0827444		20.268
170		0.0551629		0.747795		0.215896
171		0.108572		0.59419		0.110326
172		0.108572		15.201		0.215896
173		0.194681		0.161922		0.586923
174		0.0551629		0.0827444		0.110326
175		0.0551629		0.161922		0.800136
176		0.49853		0.440192		0.439369
177		0.396127		0.0827445		0.339962
178		10.134		0.600102		0.327371
179		0.107948		0.329526		1.05992
180		0.0551629		0.254971		0.436814
181		0.107948		0.245528		0.38936
182		0.293461		6.27318		0.914573
183		0.055163		0.794941		0.521751
184		0.400068		0.327611		0.110326
185		19.8663		0.29202		0.502613
186		0.219684		0.68593		0.518494
187		0.169981		0.391313		1.09283
188		0.163686		0.0827444		0.514014
189		4.18212		0.37696		1.37394
190		0.52996		0.38887		0.180172
191		0.218407		0.81962		0.160499
192		3.3859		0.38551		19.4648
193		0.19468		1.03045		8.75033
194		0.457287		0.135129		10.9758
195		0.260876		0.120374		0.261442
196		0.0551629		14.5986		1.80765
197		0.251307		6.56275		0.780675
198		0.259247		8.23188		0.670974
199		0.546413		0.196082		39.7325
200		0.257007		1.35574		0.67835
201		0.686969		0.585506		3.87292
202		2.35105		0.503231		30.4684
203		0.0900861		29.7993		3.20258
204		0.0802496		0.508762		0.373325
205		9.73242		2.90469		0.211639
206		4.37517		2.40193		0.0622986
207		5.48792		0.279994		0.803551
208		0.130721		2.2648		1.57626
209		0.903823		0.158729		1.04196
210		0.390337		0.0467239		0.912448
211		0.335487		0.602664		0.747581
212		0.339175		1.1822		0.899785
213		1.93646		0.781468		0.524483
214		4.90023		0.684336		0.922807
215		15.2342		0.560686		0.353562
216		1.60129		0.674839		0.900498
217		4.86251		0.393362		0.436814
218		0.186662		0.692105		0.677513
219		1.50987		0.265172		4.57145
220		0.10582		0.675373		0.683134
221		0.0311493		0.32761		0.319459
222		0.401776		0.508135		0.153806
223		0.788132		3.42859		0.509382
224		0.520979		0.51235		0.787864
225		0.456224		0.239594		0.479234
226		0.37379		0.115355		0.148803
227		0.449893		0.382037		0.236658
228		0.262241		0.590898		0.447942
229		0.461403		0.359425		0.473313
230		0.176781		0.111602		0.732162
231		0.450249		0.177493		1.72351
232		0.218407		0.335956		0.571066
233		0.338757		0.354985		0.706894
234		2.28573		5.83253		0.281805
235		0.341567		0.549121		2.13528
236		0.15973		1.29263		2.75135
237		0.076903		0.4283		0.190721
238		0.254691		10.6411		0.296792
239		0.393932		0.530171		1.97098
240		0.239617		0.211354		0.652462
241		0.0744015		1.60146		0.379186
242		0.118329		2.06351		0.216386
243		0.223971		0.14304		1.51712
244		0.236656		0.222594		0.501759
245		3.88835		1.47824		0.308596
246		0.366081		0.489347		0.137193
247		0.861754		0.28439		19.8784
248		0.285533		0.16229		0.456412
249		0.353447		1.13784		0.340467
250		0.140902		0.376319		0.129574
251		1.06764		0.231447		0.129979
252		1.37567		0.102895		1.81048
253		0.0953603		14.9088		0.265979
254		0.148396		0.342309		0.188259
255		0.985491		0.255351		0.20342
256		0.326231		0.0971805		0.127945
257		0.189593		0.0974839		1.42066
258		0.108193		1.35786		8.07587
259		0.75856		0.199485		0.197471
260		0.250879		0.141195		0.253799
261		0.154298		0.152565		0.318738
262		0.0685965		0.095959		0.109945
263		9.93921		1.0655		0.267703
264		0.228206		6.05691		0.302074
265		5.24536		14.4292		0.0783913
266		0.170234		0.148103		2.89837
267		0.064787		0.190349		2.53087
268		0.0649893		0.239053		0.445188
269		0.905242		0.0824589		3.55029
270		0.13299		0.200777		3.44489
271		0.0941297		0.226555		0.261371
272		0.10171		0.0587935		0.408366
273		0.0639727		2.17378		0.413836
274		0.710331		1.89816		0.147418
275		4.03794		0.333891		0.0754372
276		9.61945		2.66272		0.899823
277		0.0987355		2.58367		0.418752
278		0.126899		0.196028		0.0986105
279		0.159369		10.3069		1.00116
280		0.0549726		0.306274		0.378487
281		0.133851		0.310377		2.63154
282		0.151037		0.110563		3.45885
283		0.0391957		3.69593		0.184989
284		1.44918		0.0565779		0.152889
285		1.26544		0.674868		0.424351
286		0.222594		0.314064		0.596846
287		1.77514		0.0739578		0.783839
288		1.72244		0.75087		0.17026
289		0.130686		0.283865		2.1177
290		6.87129		1.97366		0.151712
291		0.204183		2.59414		2.69827
292		0.206918		0.138742		4.25183
293		0.0737088		0.114666		3.4856
294		2.46396		0.318263		1.13809
295		0.0377186		0.447634		4.4168
296		0.449912		0.587879		0.815189
297		0.209376		0.127695		2.21709
298		0.0493052		1.58828		3.2549
299		0.50058		0.113784		0.857042
300		0.189244		2.0237		3.04868
301		1.31577		3.18887		14.213
302		1.72943		2.6142		1.47473
303		0.0924947		0.853566		5.15409
304		0.0764443		3.3126		1.57399
305		0.212176		0.611391		1.13941
306		0.298423		1.66282		1.19867
307		0.391919		2.44117		4.43725
308		0.0851299		2.2456		1.00632
309		1.05885		0.642782		5.00283
310		0.0758562		2.28651		2.94358
311		2.22032		10.6597		4.43723
312		1.34914		1.10605		2.09866
313		2.12591		3.86557		1.13941
314		1.7428		1.18049		1.44863
315		4.53564		0.854557		1.14766
316		0.569044		0.899005		1.32368
317		2.2084		3.32793		1.38373
318		0.407594		0.754742		1.33811
319		1.10855		3.67823		0.798855
320		1.62745		3.75212		1.34176
321		1.49707		2.20769		0.37757
322		0.428521		3.32792		0.387572
323		16.7697		1.57399		2.41861
324		1.52434		0.854557		0.406281
325		7.10648		1.08647		0.402223
326		0.737365		0.860747		0.765012
327		2.57705		0.99276		0.510377
328		0.786995		1.0378		0.792645
329		0.569705		1.00358		0.304809
330		0.599337		0.599142		50.234
331		2.21862		1.00632		0.715155
332		0.503161		3.58993		0.371576
333		39.1225		0.283178		1.3218
334		5.44921		0.290679		1.52009
335		2.45215		1.81396		3.42021
336		2.50142		0.304711		0.799499
337		1.47179		0.301667		1.33944
338		2.21862		0.573759		2.4273
339		1.04933		0.382783		1.39897
340		0.569705		0.594484		0.351895
341		0.724315		0.228607		0.93761
342		0.573831		4.16224		0.68448
343		0.66184		0.536366		81.117
344		4.60392		0.278682		0.886006
345		0.691865		0.991349		3.87565
346		0.669053		1.14007		0.412136
347		0.399428		2.56516		0.670114
348		0.670881		0.599624		0.515878
349		2.39329		1.00458		1.32569
350		0.188785		1.82047		0.526453
351		0.193786		1.04922		0.526453
352		1.20931		0.263921		0.827186
353		0.20314		0.703208		3.39304
354		0.201112		0.51336		0.792092
355		0.382506		60.8377		1.10191
356		0.255188		0.664504		1.08121
357		0.396322		2.90673		0.485
358		0.152405		0.309102		2.27473
359		2.77483		7.09601		2.29591
360		25.117		0.502586		0.459877
361		0.357578		0.386909		3.34029
362		0.185788		0.994269		0.618205
363		0.660899		0.39484		0.348607
364		0.760044		0.394839		0.477094
365		1.71011		0.62039		1.10588
366		0.39975		2.54478		1.3879
367		0.669722		0.594069		0.316913
368		1.21365		0.826429		1.451
369		0.699483		0.810905		0.588137
370		0.175948		0.36375		0.58888
371		0.468805		1.70605		1.37164
372		0.34224		1.72194		0.880477
373		40.5585		0.344908		0.535276
374		0.443003		3.34156		1.90114
375		1.93782		2.50522		5.39044
376		0.206068		0.463654		0.316913
377		4.73067		0.261455		0.416585
378		0.335057		3.61485		0.892674
379		0.257939		0.357821		0.496442
380		0.662846		0.829409		0.400847
381		0.263226		1.04093		0.550775
382		0.263226		0.237685		0.557539
383		0.413593		1.08825		0.0972152
384		1.69652		0.441103		1.37702
385		0.396046		0.44166		0.477093
386		0.550953		1.02873		0.75514
387		0.540603		0.660357		0.82042
388		0.2425		0.401457		
389		1.13736		1.42586		
390		1.14796		0.237685		
391		0.229939		0.312439		
392		2.22771		0.669505		
393		1.67014		0.372332		
394		0.309103		0.300635		
395		0.174303		0.413081		
396		4.90174		0.418155		
397		2.4099		0.0729114		
398		0.238547		1.03276		
399		0.552939		0.35782		
400		6.24577		0.566355		
401		0.693952		0.615315		
402		0.158457				
403		0.725498				
404		0.294068				
405		9.02464				
406		0.29444				
407		0.68582				
408		0.440238				
409		0.267638				
410		0.950572				
411		2.69522				
412		0.158457				
413		0.208292				
414		0.446337				
415		0.248221				
416		0.200423				
417		0.275387				
418		0.27877				
419		0.0486076				
420		0.688509				
421		0.238547				
422		0.37757				
423		0.41021				
'''


e = pd.read_table(StringIO(data), index_col=0, header=None)
e.columns = ['40f','40n','60f','60n','80f','80n']
e_list = []
for index in e.columns :
    num = int(index[0:2])
    if_found = str(index[-1])
    temp = e[index].values
    temp = temp[~np.isnan(temp)]

    #temp = np.log(temp)
    # Q1 = np.percentile(temp, 25)
    # Q3 = np.percentile(temp, 75)
    # IQR = Q3 - Q1
    # outlier_step = 1.5 * IQR
    # min = Q1 - outlier_step
    # max = Q3 + outlier_step
    #
    # temp = [i for i in temp if i >= min and i <= max ]
    for i in temp:
        if if_found == 'f':
            e_list.append(['Found',str(num)+'f',i])
        else:
            e_list.append(['Not_found',str(num)+'n',  i])

e_list = np.array(e_list)
e_list = pd.DataFrame(e_list)
e_list.columns = ['label','X','value']
e_list['value'] = e_list['value'].astype(float)

figsize = 9,15
fig,axes = plt.subplots(3,2,figsize=figsize)


smorfs = smorfs/1000
sns.stripplot(data=smorfs, ax=axes[0][0],size=10)
sns.boxplot(data=smorfs, ax=axes[0][0], color='white', width=.2)
axes[0][0].set_ylabel('smORFs\n(1,000s)',fontsize=20)
axes[0][0].tick_params('both',labelsize = 20)
axes[0][0].set_title('a)',fontsize=20,loc='left')

sns.stripplot(data=n_amps, ax=axes[0][1],size=10)
sns.boxplot(data=n_amps, ax=axes[0][1], color='white', width=.2)
axes[0][1].set_ylabel('AMPs\n(count)',fontsize=20)
axes[0][1].tick_params('both',labelsize = 20)
axes[0][1].set_title('b)',fontsize=20,loc='left')


sns.stripplot(data=found_ref, ax=axes[1][0],size=10)
sns.boxplot(data=found_ref, ax=axes[1][0], color='white', width=.2)
axes[1][0].set_ylabel('% of AMPs found in references',fontsize=20)
axes[1][0].tick_params('both',labelsize = 20)
axes[1][0].set_title('c)',fontsize=20,loc='left')


sns.stripplot(data=spurious_per, ax=axes[1][1],size=10)
sns.boxplot(data=spurious_per, ax=axes[1][1], color='white', width=.2)
axes[1][1].set_ylabel('Spurious\n(% of AMPs)',fontsize=20)
axes[1][1].tick_params('both',labelsize = 20)
axes[1][1].set_title('d)',fontsize=20,loc='left')


sns.boxplot(x='X', hue='label', y='value', data=e_list,width=.6,ax=axes[2][0],color='white',fliersize=0,dodge=False)
sns.stripplot(x='X', hue='label', y='value',data=e_list, ax=axes[2][0],size=2)
axes[2][0].set_ylabel(' Coverage\n(reads per million)',fontsize=20)
axes[2][0].tick_params('both',labelsize = 20)
axes[2][0].set_title('e)',fontsize=20,loc='left')
axes[2][0].set_xlabel("Nr reads (millions)",fontsize=20)
axes[2][0].set_yscale('log')
#sns.despine(fig, trim=True)

sns.stripplot(data=time_in_h, ax=axes[2][1],size=10)
sns.boxplot(data=time_in_h, ax=axes[2][1], color='white', width=.2)
axes[2][1].set_ylabel('Processing time\n(hours)',fontsize=20)
axes[2][1].tick_params('both',labelsize = 20)
axes[2][1].set_title('f)',fontsize=20,loc='left')
axes[2][1].set_xlabel("Nr reads (millions)",fontsize=20)
fig.tight_layout()
fig.savefig('Fig4.svg')
